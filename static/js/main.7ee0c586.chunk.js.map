{"version":3,"sources":["TicToe/Board.js","libs/actionCreactor.js","libs/calculateWinner.js","libs/dispatchAll.js","libs/createGameId.js","models/tic-tac-toe/reducers.js","models/tic-tac-toe/actions.js","models/tic-tac-toe/actionFunctions.js","TicToe/Square.js","TicToe/Game.js","TicToe/TotalScore.js","TicToe/GameInfo.js","TicToe/Timer.js","TicToe/Games.js","TicToe/GamesMenu.js","serviceWorker.js","index.js"],"names":["node","arr","Array","fill","renderSquareX","x","gameId","map","el","index","react_default","a","createElement","SquareContainer","key","i","paint","classList","toggle","Board","_ref","className","ref","nodeEl","onClick","React","memo","actionCreator","type","_len","arguments","length","argsNames","_key","_len2","args","_key2","action","forEach","argName","calculateWinner","squares","lines","_lines$i","Object","slicedToArray","b","c","winner","winnerLine","dispatchAll","dispatch","actions","getGameId","id","createGameId","gameSettingsState","state","undefined","objectWithoutProperties","stepNumberState","step","xIsNextState","xTurn","squaresState","input","slice","historyState","toConsumableArray","concat","scoreState","X","O","objectSpread","defineProperty","playerXO","points","gameStatusState","stepNumber","xIsNext","history","score","winnerResults","history2","winnerResults2","gameSettings","reducers","games","newGameInitialState","newGameId","activeGameStatus","newActiveGameStatus","addSquare_A","changeXIsNext_A","changeStepNumber_A","cut_A","addNewGame_A","losePoints_A","connect","_ref2","ownProps","_games$ownProps$gameI","squareValue","squareHandler","addSquare","changeXIsNext","oldStepNumber","changeStepNumber","winnerSquer","some","location","GameContainer","_games$ownProps$gameI2","playerXName","playerOName","timeLimmit","historyLength","timeTravelDis","cutDis","cut","losePointsDis","losePoints","Board_Board","GameInfo_GameInfo","TotalScore_TotalScore","Timer_Timer","scoreAnimation","nodeHeader","add","setTimeout","remove","TotalScore","GameInfo","moves","nullEl","move","desc","style","zIndex","transform","onMouseEnter","status","Timer","_useState","useState","_useState2","clock","setClock","useEffect","idTickTock","timeLimmitSeconds","tickInterval","firstCall","setInterval","countDownValue","clearInterval","tickPersentage","color","timerClassName","GamesContainer","gamesIds","keys","addNewGameDis","_ref3","addNewGame","addNewGameDisUCB","useCallback","data","gameContainers","Fragment","GamesMenu_GamesMenu","assign","GamesMenu","menuVisible","setMenuVisible","_useForm","useForm","register","handleSubmit","errors","onSubmit","newGameOptions","name","placeholder","required","pattern","Boolean","window","hostname","match","gameReducer","combineReducers","gameStore","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7ee0c586.chunk.js","sourcesContent":["import React from 'react'\r\nimport { SquareContainer } from './'\r\n\r\nconst arr = Array(3).fill(null),\r\n      renderSquareX = (x,gameId) => arr.map((el, index) => <SquareContainer key={index+x} gameId={gameId} i={index + x} /> ),\r\n      paint = ()=>{ node.classList.toggle(\"mystyle\") }\r\n\r\nlet node;// We use the initializing way for demonstration purposes\r\n\r\nlet Board = ({gameId})=>{\r\n    return (\r\n      <div className=\"gameBoard\">\r\n        <div\r\n          ref={nodeEl => { if(nodeEl) node = nodeEl; }}\r\n          onClick={paint}\r\n          className=\"boardRow\"\r\n        >\r\n          {renderSquareX(0,gameId)}\r\n        </div>\r\n        <div className=\"boardRow\">{renderSquareX(3,gameId)}</div>\r\n        <div className=\"boardRow\">{renderSquareX(6, gameId)}</div>\r\n      </div>\r\n    );\r\n}\r\nBoard = React.memo(Board);\r\nexport { Board }\r\n// export { Board, node, paint } we can pas functions, elements, from Component=>Component with export like the props ","const actionCreator = (type, ...argsNames) => (...args) => {\r\n    const action = { type }\r\n    argsNames.forEach((argName, index) => { action[argName] = args[index] })\r\n    return action;\r\n}\r\nexport {actionCreator}\r\n\r\n\r\n\r\n","//squares has all the x,o,nu.   Is array with length of 9\r\n//Returns object with results(null,x,o) and lines(position of the winner array with length of 3)\r\nconst calculateWinner = (squares)=>{\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n    //We love functional programming but in this case for is better(faster for big calc and brakes)\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            //We have a winner=>squares[a]=squares[b]=squares[c] in the position of lines[0],lines[1],lines[2]\r\n            return { winner:squares[a], winnerLine:lines[i] }\r\n        }\r\n    }\r\n    //We dont have a winner case\r\n    return { winner: null, winnerLine:null };\r\n}\r\n\r\nexport { calculateWinner }","const dispatchAll = (dispatch, ...actions) => actions.forEach(action => dispatch(action))\r\n\r\nexport { dispatchAll }","const createGameId =()=>{\r\n    let id=0;\r\n    return ()=>id++\r\n}\r\nconst getGameId = createGameId();\r\n\r\nexport { getGameId };","import { calculateWinner } from '../../libs'\r\nimport { ADD_SQUARE , CUT, CHANGE_STEP, CHANGE_XISNEXT, ADD_NEW_GAME, LOSE_POINTS } from './actions'\r\n\r\nconst gameSettingsState = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_GAME:\r\n            const { type, gameId, ...newGameSettings } = action;\r\n            return newGameSettings;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst stepNumberState = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_STEP:\r\n      return action.step;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst xIsNextState = (state = true, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_XISNEXT:\r\n      return action.xTurn;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst squaresState = (state = Array(9).fill(null), action) => {\r\n    switch (action.type){\r\n        case ADD_SQUARE:\r\n        state[action.index] = action.input\r\n        return  state.slice();\r\n    default: return state;\r\n    }\r\n}\r\n\r\nconst historyState = (state = [{ squares:squaresState(undefined, {}) }], action) => {\r\n    switch (action.type) {\r\n        case ADD_SQUARE:\r\n            return [...state.slice(0, action.step + 1), {squares:squaresState(state[action.step].squares.slice(), action)}]\r\n        case CUT:\r\n            return [...state.slice(0, action.step + 1)]\r\n        default: return state\r\n    }\r\n}\r\n\r\nconst scoreState = (state = { X: 0, O: 0 }, action) => {\r\n      switch (action.type) {\r\n        case LOSE_POINTS:\r\n            return {...state, [action.playerXO]:state[action.playerXO]-action.points}\r\n        default: return state\r\n    }\r\n};\r\n\r\nconst gameStatusState = (state = { \r\n    stepNumber: stepNumberState( undefined, {}),\r\n    xIsNext: xIsNextState(undefined, {}), \r\n    history: historyState(undefined, {}), \r\n    score: scoreState(undefined, {}), \r\n    winnerResults: { winner: null, winnerLine: null } }, action ) => {\r\n    switch (action.type) {\r\n        case ADD_SQUARE:\r\n            const history = historyState(state.history.slice(), action);\r\n            const winnerResults = calculateWinner(history[history.length - 1].squares.slice());\r\n            const score = winnerResults.winner ? { ...state.score, [winnerResults.winner]: state.score[winnerResults.winner] +1  } : { ...state.score }\r\n            return {...state, history, score, winnerResults };\r\n        case CUT:\r\n            const history2 = historyState(state.history.slice(), action);\r\n            const winnerResults2 = calculateWinner(history2[history2.length - 1].squares.slice());\r\n            return { ...state, history:history2, winnerResults:winnerResults2 }\r\n        case CHANGE_XISNEXT:\r\n            return { ...state, xIsNext: xIsNextState(state.xIsNext, action) };\r\n        case CHANGE_STEP:\r\n            return { ...state, stepNumber: stepNumberState(state.stepNumber, action) }\r\n        case ADD_NEW_GAME:\r\n            return { ...state, gameSettings: gameSettingsState( {}, action) }\r\n        case LOSE_POINTS:\r\n            return { ...state, score: scoreState(state.score, action) }\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nconst games = (state = {},action) => {\r\n  switch (action.type) {\r\n    case ADD_NEW_GAME:\r\n        const newGameInitialState = { [action.newGameId]: gameStatusState(undefined, action) };\r\n      return { ...state, ...newGameInitialState };\r\n    case ADD_SQUARE:\r\n    case CUT:\r\n    case CHANGE_XISNEXT:\r\n    case CHANGE_STEP:\r\n    case LOSE_POINTS:\r\n      //Find gameState of the game who sends the action by gameId\r\n      const activeGameStatus = state[action.gameId];\r\n      //Parse the oldActiveGameStatusState and the action and get the new State\r\n      const newActiveGameStatus = gameStatusState(activeGameStatus, action);\r\n      //Overide only the specific game state\r\n      return { ...state, [action.gameId]: newActiveGameStatus };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nconst reducers = { games }\r\nexport {reducers};\r\n\r\n\r\n","const ADD_SQUARE = 'ADD_SQUARE';\r\nconst CUT = 'CUT';\r\nconst CHANGE_STEP = 'CHANGE_STEP';\r\nconst CHANGE_XISNEXT = 'CHANGE_XISNEXT';\r\nconst ADD_NEW_GAME = 'ADD_NEW_GAME';\r\nconst LOSE_POINTS = \"LOSE_POINTS\";\r\n\r\nexport {\r\n  ADD_SQUARE,\r\n  CUT,\r\n  CHANGE_STEP,\r\n  CHANGE_XISNEXT,\r\n  ADD_NEW_GAME,\r\n  LOSE_POINTS\r\n};","import { actionCreator } from '../../libs/actionCreactor'\r\nimport {\r\n  ADD_SQUARE,\r\n  CHANGE_STEP,\r\n  CHANGE_XISNEXT,\r\n  CUT,\r\n  ADD_NEW_GAME,\r\n  LOSE_POINTS\r\n} from \"./actions\";\r\n\r\nconst addSquare_A = actionCreator(ADD_SQUARE, 'gameId','index', 'input', 'step');\r\nconst changeXIsNext_A = actionCreator(CHANGE_XISNEXT, 'gameId', 'xTurn');\r\nconst changeStepNumber_A = actionCreator(CHANGE_STEP,  'gameId','step');\r\nconst cut_A = actionCreator(CUT, 'gameId', 'step');\r\nconst addNewGame_A = actionCreator(ADD_NEW_GAME, 'newGameId','playerXName', 'playerOName', 'timeLimmit');\r\nconst losePoints_A = actionCreator(LOSE_POINTS, 'gameId', 'playerXO', 'points');\r\n\r\nexport {\r\n  addSquare_A,\r\n  changeXIsNext_A,\r\n  changeStepNumber_A,\r\n  cut_A,\r\n  addNewGame_A,\r\n  losePoints_A\r\n};","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {addSquare_A, changeXIsNext_A, changeStepNumber_A} from '../models/tic-tac-toe/'\r\nimport { dispatchAll } from '../libs'\r\n\r\n//Helper actionFunctions\r\nconst addSquare = (gameId, index, xIsNext, stepNumber)=>{\r\n  let input = xIsNext ? 'X':'O' \r\n  return addSquare_A(gameId, index, input, stepNumber)\r\n};\r\nconst changeXIsNext = (gameId, xIsNext)=> changeXIsNext_A(gameId, !xIsNext);\r\nconst changeStepNumber = (gameId, oldStepNumber)=>changeStepNumber_A(gameId, oldStepNumber + 1);\r\n\r\n//ComponentUI\r\nconst Square = ({gameId, i, squareValue, xIsNext, stepNumber, squareHandler, winner, winnerLine})=>{\r\n  const winnerSquer = winner && winnerLine.some(location => location === i);\r\n  const onClickSquare = ()=>winner || squareValue ? 1 : squareHandler(gameId, i, xIsNext, stepNumber);\r\n\r\n  //Future Need  useEffect(() => {}, [gameId]);\r\n\r\n  return (\r\n    <button onClick={ onClickSquare }\r\n      className={ winnerSquer ? \"squareW squareA square\" \r\n        : winner ?'squareA square' : 'square'\r\n      }>\r\n      { squareValue }\r\n    </button>\r\n  );\r\n}\r\n\r\n//Redux\r\nconst stateSquare = ({ games }, ownProps) => {\r\n  // CURRENT GAME\r\n const { history, winnerResults, xIsNext, stepNumber } = games[ownProps.gameId] \r\n return {\r\n          squareValue: history[stepNumber].squares[ownProps.i],\r\n          xIsNext,\r\n          stepNumber,\r\n          winner: winnerResults.winner && stepNumber === history.length-1 ? winnerResults.winner : null,\r\n          winnerLine: winnerResults.winnerLine\r\n         }\r\n}\r\n\r\nconst dispatchSquare = dispatch => ({\r\n  squareHandler: (gameId, input, xIsNext, stepNumber) => {\r\n    dispatchAll(dispatch,\r\n      addSquare(gameId, input, xIsNext, stepNumber),\r\n      changeXIsNext(gameId, xIsNext),\r\n      changeStepNumber(gameId, stepNumber)\r\n    )\r\n  }\r\n})\r\n\r\nconst SquareContainer = connect(stateSquare, dispatchSquare)(Square)\r\nexport { SquareContainer }","import React from 'react'\r\nimport { Board, TotalScore, GameInfo, Timer } from './'\r\nimport { connect } from 'react-redux'\r\nimport { changeXIsNext_A, changeStepNumber_A, cut_A, losePoints_A } from '../models/tic-tac-toe/'\r\nimport { dispatchAll } from '../libs'\r\nimport './Static/game.scss';\r\n\r\n//actionFunctions functions\r\nconst changeXIsNext = (gameId, step) => changeXIsNext_A(gameId, step % 2 === 0);\r\nconst changeStepNumber = (gameId, step) => changeStepNumber_A(gameId, step);\r\nconst cut = (gameId, step) => cut_A(gameId, step);\r\nconst losePoints = (gameId, playerXO, points) => losePoints_A(gameId, playerXO, points);\r\n\r\n//Component\r\nconst Game = ({\r\n  gameId, score, winner, historyLength, xIsNext, timeTravelDis, cutDis, stepNumber,\r\n  playerOName, playerXName, timeLimmit, losePointsDis }) => {\r\n    return (\r\n      <div className=\"game\">\r\n        <Board { ...{gameId}  }/>\r\n        <GameInfo { ...{gameId, historyLength, stepNumber, cutDis, timeTravelDis, winner, xIsNext } } />\r\n        <TotalScore { ...{ playerXName, playerOName, winner, score } } />\r\n        <Timer { ...{ gameId, timeLimmit, xIsNext, losePointsDis } } />\r\n      </div>\r\n    );\r\n}\r\n\r\n//ReduxState&Dispatch\r\nconst stateGame = ({ games }, ownProps) => {\r\n  const { gameSettings: {\r\n           playerXName, \r\n           playerOName, \r\n           timeLimmit,\r\n          },\r\n           xIsNext, stepNumber, score, history, winnerResults } = games[ownProps.gameId];\r\n  return {\r\n    winner: winnerResults.winner && stepNumber === history.length - 1 ? winnerResults.winner : null,\r\n    historyLength: Array(history.length).fill(null),\r\n    xIsNext,\r\n    stepNumber,\r\n    score,\r\n    playerXName,\r\n    playerOName,\r\n    timeLimmit\r\n  };\r\n};\r\n\r\nconst dispatchGame = dispatch => ({\r\n    timeTravelDis: (gameId, step) => {\r\n        dispatchAll(dispatch,\r\n            changeXIsNext(gameId, step),\r\n            changeStepNumber(gameId, step))\r\n    },\r\n    cutDis: (gameId, step) => { dispatch(cut(gameId, step)) },\r\n    losePointsDis: (gameId, playerXO, points) => { dispatch(losePoints(gameId, playerXO, points)) }\r\n})\r\nconst GameContainer = connect(stateGame, dispatchGame)(Game)\r\nexport { GameContainer }","import React from \"react\";\r\n\r\nconst scoreAnimation = nodeHeader => {\r\n  nodeHeader.classList.add(\"scoreRotation\");\r\n  setTimeout(() => nodeHeader.classList.remove(\"scoreRotation\"), 2000);\r\n};\r\n\r\nlet TotalScore = ( { playerXName, playerOName, winner, score } ) => {\r\n return <div className=\"totalScore\">\r\n          <span className=\"headerName\">{playerXName}</span>\r\n          <span className=\"headerName\">{playerOName}</span>\r\n          <span className=\"header\">X</span>\r\n          <span className=\"header\">O</span>\r\n          <span className=\"xi\" ref={nodeEl => {\r\n              if (winner === \"X\" && nodeEl) {\r\n                scoreAnimation(nodeEl);\r\n              }}}>\r\n            {score.X}\r\n          </span>\r\n          <span className=\"omikron\" ref={nodeEl => {\r\n              if (winner === \"O\" && nodeEl) {\r\n                scoreAnimation(nodeEl);\r\n              }}}>\r\n            {score.O}\r\n          </span>\r\n        </div>;\r\n}\r\n\r\nTotalScore = React.memo(TotalScore);\r\n\r\nexport { TotalScore };","import React from \"react\";\r\n\r\nconst GameInfo = ({gameId, historyLength, stepNumber, cutDis, timeTravelDis, winner, xIsNext })=> {\r\n        const moves = historyLength.map((nullEl, move) => {\r\n        const desc = move ?\r\n            'Go to move #' + move :\r\n            'Go to game start';\r\n        return <li key={move}>\r\n            <button\r\n                ref={nodeEl => {\r\n                    if (move === stepNumber && nodeEl) {\r\n                        nodeEl.style.zIndex = 1\r\n                            setTimeout(function () {\r\n                                nodeEl.style.transform = \"translate(0,10px)\";\r\n                                nodeEl.style.zIndex = 0;\r\n                            }, 100)         \r\n                    }\r\n                }}\r\n                className={stepNumber === move ? 'travel current' : 'travel'}\r\n                onClick={() => { cutDis(gameId, move); }} onMouseEnter={() => timeTravelDis(gameId, move)}>\r\n                {desc}\r\n            </button>\r\n        </li>;\r\n    });\r\n    let status = winner ? \"Winner: \" + winner : \"Next player: \" + (xIsNext ? \"X\" : \"O\");\r\n\r\n    return <div className=\"gameInfo\">\r\n              <div className={winner ? \"status winner\" : \"status\"}>\r\n                {status}\r\n              </div>\r\n              <ol>{moves}</ol>\r\n            </div>;\r\n\r\n}\r\n\r\nexport { GameInfo }","import React, { useState, useEffect } from \"react\"\r\n\r\n\r\nconst Timer = ({ gameId, timeLimmit, xIsNext, losePointsDis }) => {\r\n  const [clock, setClock] = useState(timeLimmit / 1000);\r\n\r\n  const timerClassName = (clock) => {\r\n    const tickPersentage = clock / (timeLimmit / 1000);\r\n    switch (true) {\r\n      case tickPersentage > 0.75:\r\n        return { color: \"green\" };\r\n      case tickPersentage > 0.5:\r\n        return { color: \"yellow\" };\r\n      case tickPersentage > 0.25:\r\n        return { color: \"orange\" };\r\n      case tickPersentage >=0 :\r\n        return { color: \"red\" };\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n  const losePoints = (firstCall, countDownValue) => {\r\n    if (!firstCall && countDownValue === 0) {\r\n      const plyaerXO = xIsNext ? \"X\" : \"O\";\r\n      losePointsDis(gameId, plyaerXO, 0.5);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    let timeLimmitSeconds = timeLimmit / 1000;\r\n    let tickInterval = 1;\r\n    let firstCall = true;\r\n    let idTickTock;\r\n\r\n    const tickTock = () =>\r\n      setInterval(() => {\r\n          const countDownValue = timeLimmitSeconds - (tickInterval++ % (timeLimmitSeconds+1));\r\n          setClock(countDownValue);\r\n          losePoints(firstCall, countDownValue); \r\n        if (firstCall) firstCall = !firstCall;\r\n      }, 1000);\r\n    idTickTock=tickTock();\r\n    // Specify how to clean up after this effect:\r\n    return ()=>{ clearInterval(idTickTock); setClock(timeLimmit / 1000); };\r\n  }, [xIsNext]);\r\n\r\n  return (\r\n    <span className={xIsNext ? \"timer\" : \"timer oIsNext\"} style={timerClassName(clock)}>\r\n      {clock}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport { Timer }","import React, { useCallback } from \"react\";\r\nimport { GameContainer, GamesMenu } from \"./\";\r\nimport { addNewGame_A } from \"../models/tic-tac-toe/\";\r\nimport { connect } from \"react-redux\";\r\n\r\n//actionFunctions functions\r\nconst addNewGame = (gameId, playerXName, playerOName, timeLimmit) => addNewGame_A(gameId, playerXName, playerOName, timeLimmit);\r\n\r\n//Component\r\nconst Games = ({ gamesIds, addNewGameDis }) => {\r\n    const addNewGameDisUCB = useCallback((data) => addNewGameDis(data), []);\r\n    const gameContainers = gamesIds.map(gameId=><GameContainer {...{key:gameId, gameId}} />)\r\n  return (\r\n    <>\r\n      <GamesMenu className='gamesMenuu' {...{ addNewGameDisUCB }} />\r\n      { gameContainers }\r\n    </>\r\n  );\r\n};\r\n\r\n//ReduxState&Dispatch\r\nconst stateGame = ({games}) => {\r\n  return { gamesIds: Object.keys(games) };\r\n};\r\n\r\nconst dispatchGame = dispatch => ({ \r\n    addNewGameDis:({newGameId, playerXName, playerOName, timeLimmit})=>{ \r\n      dispatch(addNewGame(newGameId, playerXName, playerOName, timeLimmit)) }\r\n});\r\nconst GamesContainer = connect(stateGame, dispatchGame)(Games);\r\nexport { GamesContainer };\r\n\r\n\r\n//Fast Game\r\n//add dispatch to props via dispatchGame\r\n{/* <div className=\"newGameButton\"style={{ left: \"300px\" }}onClick={() =>dispatch({type: \"ADD_NEW_GAME\",\r\n           newGameId: 0,playerXName: \"aris\",playerOName: \"nina\",timeLimmit: 4000})}/> */}","import React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getGameId } from \"../libs\";\r\nlet GamesMenu = ({ addNewGameDisUCB }) => {\r\n    const [menuVisible, setMenuVisible] = useState(false);\r\n    const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n    const onSubmit = data => {\r\n        const newGameOptions = { newGameId:getGameId(), ...data, timeLimmit:data.timeLimmit*1000 };\r\n        setMenuVisible(false);  \r\n        addNewGameDisUCB(newGameOptions);\r\n    };\r\n    const onClickButton = ()=>setMenuVisible(!menuVisible);  \r\n    \r\n    return (\r\n      <>\r\n        <div className={ menuVisible ? \"newGameButton on\" : \"newGameButton\" } onClick={onClickButton}>\r\n        </div>\r\n        <form\r\n          className={\r\n            menuVisible ? \"gamesMenu menuVisible\" : \"gamesMenu menuHidden\"\r\n          }\r\n          onSubmit={handleSubmit(onSubmit)}\r\n        >\r\n          <input name=\"playerXName\" placeholder='nameX' ref={register({ required: true, pattern: /^([a-zA-Z0-9_-]){3,5}$/ })} />\r\n          {errors.playerXName && \"nameX is required Please enter Alpanumeric Letters with length 3-5\"}\r\n          <input name=\"playerOName\" placeholder='nameO' ref={register({ required: true, pattern: /^([a-zA-Z0-9_-]){3,5}$/ })} />\r\n          {errors.playerOName && \"nameO is required Please enter Alpanumeric Letters with length 3-5\"}\r\n          <input name=\"timeLimmit\" placeholder='time Limmit(sec)' ref={register({required: true, pattern: /^[2-8]$/ })} />\r\n          {errors.timeLimmit && \"timeLimmit is required Please enter  a  number 2-8\"}\r\n          <input className='submit' type=\"submit\" />\r\n        </form>\r\n      </>\r\n    );\r\n};\r\n\r\nGamesMenu = React.memo(GamesMenu);\r\n\r\nexport  { GamesMenu }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './static/main.scss';\r\nimport { GamesContainer } from './TicToe/';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, combineReducers } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport { reducers } from \"./models/tic-tac-toe/\";\r\n\r\nconst gameReducer = combineReducers(reducers),\r\n      gameStore = createStore(gameReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={gameStore}>\r\n    <GamesContainer />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}